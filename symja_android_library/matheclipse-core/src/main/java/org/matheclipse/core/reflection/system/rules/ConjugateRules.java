package org.matheclipse.core.reflection.system.rules;

import static org.matheclipse.core.expression.F.Conjugate;
import static org.matheclipse.core.expression.F.Erf;
import static org.matheclipse.core.expression.F.Erfc;
import static org.matheclipse.core.expression.F.IInit;
import static org.matheclipse.core.expression.F.ISet;
import static org.matheclipse.core.expression.F.ISetDelayed;
import static org.matheclipse.core.expression.F.List;
import static org.matheclipse.core.expression.F.x_;
import static org.matheclipse.core.expression.S.Conjugate;
import static org.matheclipse.core.expression.S.Undefined;
import static org.matheclipse.core.expression.S.x;
import org.matheclipse.core.interfaces.IAST;

/**
 * <p>
 * Generated by <code>org.matheclipse.core.preprocessor.RulePreprocessor</code>.
 * </p>
 * <p>
 * See GIT repository at:
 * <a href="https://github.com/axkr/symja_android_library">github.com/axkr/symja_android_library
 * under the tools directory</a>.
 * </p>
 */
public interface ConjugateRules {
  /**
   * <ul>
   * <li>index 0 - number of equal rules in <code>RULES</code></li>
   * </ul>
   */
  final public static int[] SIZES = {1, 2};

  final public static IAST RULES = List(IInit(Conjugate, SIZES),
      // Conjugate(Undefined)=Undefined
      ISet(Conjugate(Undefined), Undefined),
      // Conjugate(Erf(x_)):=Erf(Conjugate(x))
      ISetDelayed(Conjugate(Erf(x_)), Erf(Conjugate(x))),
      // Conjugate(Erfc(x_)):=Erfc(Conjugate(x))
      ISetDelayed(Conjugate(Erfc(x_)), Erfc(Conjugate(x))));
}
