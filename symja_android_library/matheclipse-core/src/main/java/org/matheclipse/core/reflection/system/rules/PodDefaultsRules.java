package org.matheclipse.core.reflection.system.rules;

import static org.matheclipse.core.expression.F.*;
import org.matheclipse.core.interfaces.ISymbol;
import org.matheclipse.core.interfaces.IAST;
import org.matheclipse.core.patternmatching.Matcher;

/**
 * <p>
 * Generated by <code>org.matheclipse.core.preprocessor.RulePreprocessor</code>.
 * </p>
 * <p>
 * See GIT repository at:
 * <a href="https://github.com/axkr/symja_android_library">github.com/axkr/symja_android_library
 * under the tools directory</a>.
 * </p>
 */
public interface PodDefaultsRules {
  final public static IAST RULES = List(
      // Abs={-10.0,10.0,-20.0,20.0,Reals}
      Set(Abs, List(num(-10.0), num(10.0), num(-20.0), num(20.0), Reals)),
      // Ceiling={-5.0,5.0,-5.0,5.0,Reals}
      Set(Ceiling, List(num(-5.0), num(5.0), num(-5.0), num(5.0), Reals)),
      // Conjugate={-10.0,10.0,-10.0,10.0,Reals}
      Set(Conjugate, List(num(-10.0), num(10.0), num(-10.0), num(10.0), Reals)),
      // EllipticK={-10.0,10.0,-1.0,5.0,Reals}
      Set(EllipticK, List(num(-10.0), num(10.0), CND1, num(5.0), Reals)),
      // Exp={-10.0,10.0,-0.1,125000.0,Reals}
      Set(Exp, List(num(-10.0), num(10.0), num(-0.1), num(125000.0), Reals)),
      // Floor={-5.0,5.0,-5.0,5.0,Reals}
      Set(Floor, List(num(-5.0), num(5.0), num(-5.0), num(5.0), Reals)),
      // Gamma={-5.0,7.0,-30.0,30.0,Reals}
      Set(Gamma, List(num(-5.0), num(7.0), num(-30.0), num(30.0), Reals)),
      // Haversine={-10.0,10.0,-1.0,2.0,Reals}
      Set(Haversine, List(num(-10.0), num(10.0), CND1, num(2.0), Reals)),
      // InverseHaversine={-3.0,4.0,-1.0,5.0,Reals}
      Set(InverseHaversine, List(num(-3.0), num(4.0), CND1, num(5.0), Reals)),
      // Log={-10.0,10.0,-3.0,3.0,Reals}
      Set(Log, List(num(-10.0), num(10.0), num(-3.0), num(3.0), Reals)),
      // LogisticSigmoid={-3.0,3.0,0.0,2.0,Reals}
      Set(LogisticSigmoid, List(num(-3.0), num(3.0), CD0, num(2.0), Reals)),
      // Sign={-5.0,5.0,-2.0,2.0,Reals}
      Set(Sign, List(num(-5.0), num(5.0), num(-2.0), num(2.0), Reals)),
      // Sqrt={-20.0,20.0,-1.0,5.0,Reals}
      Set(Sqrt, List(num(-20.0), num(20.0), CND1, num(5.0), Reals)),
      // Surd={-10.0,10.0,-10.0,10.0,Reals}
      Set(Surd, List(num(-10.0), num(10.0), num(-10.0), num(10.0), Reals)),
      // Sin={-10.0,10.0,-2.0,2.0,Reals}
      Set(Sin, List(num(-10.0), num(10.0), num(-2.0), num(2.0), Reals)),
      // Sinc={-10.0,10.0,-2.0,2.0,Reals}
      Set(Sinc, List(num(-10.0), num(10.0), num(-2.0), num(2.0), Reals)),
      // Cos={-10.0,10.0,-2.0,2.0,Reals}
      Set(Cos, List(num(-10.0), num(10.0), num(-2.0), num(2.0), Reals)),
      // Cot={-10.0,10.0,-20.0,20.0,Reals}
      Set(Cot, List(num(-10.0), num(10.0), num(-20.0), num(20.0), Reals)),
      // Tan={-10.0,10.0,-20.0,20.0,Reals}
      Set(Tan, List(num(-10.0), num(10.0), num(-20.0), num(20.0), Reals)),
      // Sinh={-10.0,10.0,-6000.0,6000.0,Reals}
      Set(Sinh, List(num(-10.0), num(10.0), num(-6000.0), num(6000.0), Reals)),
      // Cosh={-10.0,10.0,-1.0,30000.0,Reals}
      Set(Cosh, List(num(-10.0), num(10.0), CND1, num(30000.0), Reals)),
      // Coth={-10.0,10.0,-5.0,5.0,Reals}
      Set(Coth, List(num(-10.0), num(10.0), num(-5.0), num(5.0), Reals)),
      // Tanh={-10.0,10.0,-2.0,2.0,Reals}
      Set(Tanh, List(num(-10.0), num(10.0), num(-2.0), num(2.0), Reals)),
      // ArcSin={-2.0,2.0,-20.0,20.0,Reals}
      Set(ArcSin, List(num(-2.0), num(2.0), num(-20.0), num(20.0), Reals)),
      // ArcCos={-2.0,2.0,-20.0,20.0,Reals}
      Set(ArcCos, List(num(-2.0), num(2.0), num(-20.0), num(20.0), Reals)),
      // ArcCot={-10.0,10.0,-3.0,3.0,Reals}
      Set(ArcCot, List(num(-10.0), num(10.0), num(-3.0), num(3.0), Reals)),
      // ArcTan={-10.0,10.0,-3.5,3.5,Reals}
      Set(ArcTan, List(num(-10.0), num(10.0), num(-3.5), num(3.5), Reals)),
      // ArcSinh={-10.0,10.0,-10.0,10.0,Reals}
      Set(ArcSinh, List(num(-10.0), num(10.0), num(-10.0), num(10.0), Reals)),
      // ArcCosh={-20.0,20.0,-1.0,10.0,Reals}
      Set(ArcCosh, List(num(-20.0), num(20.0), CND1, num(10.0), Reals)),
      // ArcCoth={-12.0,12.0,-10.0,10.0,Reals}
      Set(ArcCoth, List(num(-12.0), num(12.0), num(-10.0), num(10.0), Reals)),
      // ArcTanh={-2.0,2.0,-10.0,10.0,Reals}
      Set(ArcTanh, List(num(-2.0), num(2.0), num(-10.0), num(10.0), Reals)),
      // Csc={-10.0,10.0,-10.0,10.0,Reals}
      Set(Csc, List(num(-10.0), num(10.0), num(-10.0), num(10.0), Reals)),
      // Csch={-10.0,10.0,-5.0,5.0,Reals}
      Set(Csch, List(num(-10.0), num(10.0), num(-5.0), num(5.0), Reals)),
      // ArcCsc={-10.0,10.0,-5.0,5.0,Reals}
      Set(ArcCsc, List(num(-10.0), num(10.0), num(-5.0), num(5.0), Reals)),
      // ArcCsch={-10.0,10.0,-5.0,5.0,Reals}
      Set(ArcCsch, List(num(-10.0), num(10.0), num(-5.0), num(5.0), Reals)),
      // Sec={-10.0,10.0,-10.0,10.0,Reals}
      Set(Sec, List(num(-10.0), num(10.0), num(-10.0), num(10.0), Reals)),
      // Sech={-10.0,10.0,-1.0,1.0,Reals}
      Set(Sech, List(num(-10.0), num(10.0), CND1, CD1, Reals)),
      // ArcSec={-10.0,10.0,-1.0,5.0,Reals}
      Set(ArcSec, List(num(-10.0), num(10.0), CND1, num(5.0), Reals)),
      // ArcSech={-1.5,1.5,-5.0,5.0,Reals}
      Set(ArcSech, List(num(-1.5), num(1.5), num(-5.0), num(5.0), Reals)),
      // CosIntegral={-10.0,10.0,-5.0,5.0,Complexes}
      Set(CosIntegral, List(num(-10.0), num(10.0), num(-5.0), num(5.0), Complexes)),
      // CoshIntegral={-2.0,2.0,-5.0,5.0,Complexes}
      Set(CoshIntegral, List(num(-2.0), num(2.0), num(-5.0), num(5.0), Complexes)),
      // LogIntegral={-3.0,3.0,-6.0,6.0,Complexes}
      Set(LogIntegral, List(num(-3.0), num(3.0), num(-6.0), num(6.0), Complexes)),
      // SinIntegral={-15.0,15.0,-3.0,3.0,Reals}
      Set(SinIntegral, List(num(-15.0), num(15.0), num(-3.0), num(3.0), Reals)),
      // SinhIntegral={-5.0,5.0,-20.0,20.0,Reals}
      Set(SinhIntegral, List(num(-5.0), num(5.0), num(-20.0), num(20.0), Reals)));
}
