package org.matheclipse.core.system;

import org.junit.Test;
import org.matheclipse.core.basic.Config;

public class BesselFunctionTest extends ExprEvaluatorTestCase {

  @Test
  public void testAngerJ() {
    checkNumeric("AngerJ(1,2.0)", //
        "0.5767248077568734");
    checkNumeric("AngerJ(1,-3.0)", //
        "-0.3390589585259364");

    checkNumeric("N(AngerJ(2, 3), 50)", //
        "0.48609126058589107690783109411498403480166226564329");
    checkNumeric("N(AngerJ(2, 3+I), 50)", //
        "0.63416037014855353652729947568125478798456755684391+I*0.02533840000326950179626342065897534156397441542201");
    checkNumeric("AngerJ(2,3.0+I)", //
        "0.6341603701485535+I*0.0253384000032695");


    check("AngerJ(-42,z)", //
        "BesselJ(42,z)");
    check("AngerJ(-43,z)", //
        "-BesselJ(43,z)");
    check("AngerJ(-44,z)", //
        "BesselJ(44,z)");
    check("AngerJ(-45,z)", //
        "-BesselJ(45,z)");
    check("AngerJ(-1,z)", //
        "-BesselJ(1,z)");
    check("AngerJ(42,z)", //
        "BesselJ(42,z)");
    check("AngerJ(43,z)", //
        "BesselJ(43,z)");
    check("AngerJ(1,z)", //
        "BesselJ(1,z)");
    check("AngerJ(0,z)", //
        "BesselJ(0,z)");
    check("AngerJ(n,0)", //
        "Sinc(n*Pi)");

  }

  @Test
  public void testAiryAi() {
    checkNumeric("N(AiryAi(2),50)", //
        "0.034924130423274379135322080791807609761060213897583");
    checkNumeric("N(AiryAi(7/3-2/5*I),50)", //
        "0.016874804605341661659775534626271816427074044995777+I*0.012798024737488814075510100061236077085813173622615");
    checkNumeric("AiryAi(0.0)", //
        "0.35502805388781723");
    checkNumeric("AiryAi(1.8)", //
        "0.047036216866845805");
    checkNumeric("AiryAi(2.0)", //
        "0.034924130423274379");
    checkNumeric("AiryAi(2.5+I)", //
        "-0.0019120892713783827+I*(-0.0180329057653492)");
    checkNumeric("AiryAi({1.2, 1.5, 1.8})", //
        "{0.10612576226331254,0.071749497008105409,0.047036216866845805}");

    checkNumeric("AiryAi(-2.0-2.0*I)", //
        "3.4208376424760303+I*(-2.390652519773028)");

    check("AiryAi((-1.5)+(-2.0)*I)", //
        "3.09744+I*0.276007");
    checkNumeric("Table(AiryAi(x+I*y), {x,-2,2,0.5}, {y,-2 ,2,0.5})", //
        "{{3.4208376424760303+I*(-2.390652519773028),1.3358308195081796+I*(-1.4955254358275654),0.5563045393711925+I*(-0.7898014381882759),0.29003094106266103+I*(-0.3303078762239586),0.22740742820168555,0.29003094106266103+I*0.3303078762239586,0.5563045393711925+I*0.7898014381882759,1.3358308195081796+I*1.4955254358275654,3.4208376424760303+I*2.390652519773028},{3.097441721400677+I*0.27600692400693716,1.6305043526218825+I*(-0.2888797473203903),0.8849522834391784+I*(-0.28932577386387387),0.5556884983907999+I*(-0.15402139368443876),0.4642565777488694,0.5556884983907999+I*0.15402139368443876,0.8849522834391784+I*0.28932577386387387,1.6305043526218825+I*0.2888797473203903,3.097441721400677+I*(-0.27600692400693716)},{1.6950640897970375+I*1.4241845593465408,1.210276405359684+I*0.4733886603613785,0.8221174265552726+I*0.11996634266442434,0.6038101468250493+I*0.01701729306256588,0.5355608832923521,0.6038101468250493+I*(-0.01701729306256588),0.8221174265552726+I*(-0.11996634266442434),1.210276405359684+I*(-0.4733886603613785),1.6950640897970375+I*(-1.4241845593465408)},{0.49718792123513506+I*1.3932056575076226,0.6389761019209799+I*0.6893216583744993,0.5790199658388449+I*0.3084924553867703,0.504653898335663+I*0.11433718873992552,0.4757280916105396,0.504653898335663+I*(-0.11433718873992552),0.5790199658388449+I*(-0.3084924553867703),0.6389761019209799+I*(-0.6893216583744993),0.49718792123513506+I*(-1.3932056575076226)},{-0.10961462643277392+I*0.911583600113861,0.2237278511097556+I*0.5781126623007086,0.3314933054321412+I*0.31744985896844374,0.3536492233751019+I*0.1368020542285243,0.3550280538878172,0.3536492233751019+I*(-0.1368020542285243),0.3314933054321412+I*(-0.31744985896844374),0.2237278511097556+I*(-0.5781126623007086),-0.10961462643277392+I*(-0.911583600113861)},{-0.26626152971283157+I*0.45548648549281234,0.01609950852829359+I*0.3726593373594342,0.15711844649998616+I*0.24103981384021075,0.216186344778126+I*0.11483063987764812,0.23169360648083348,0.216186344778126+I*(-0.11483063987764812),0.15711844649998616+I*(-0.24103981384021075),0.01609950852829359+I*(-0.3726593373594342),-0.26626152971283157+I*(-0.45548648549281234)},{-0.21938625498142755+I*0.1753859114081094,-0.04980102241778393+I*0.19961798336614792,0.06045830837183814+I*0.1518895658771814,0.11791053318992206+I*0.07897644336959969,0.1352924163128814,0.11791053318992206+I*(-0.07897644336959969),0.06045830837183814+I*(-0.1518895658771814),-0.04980102241778393+I*(-0.19961798336614792),-0.21938625498142755+I*(-0.1753859114081094)},{-0.13091794569465862+I*0.04635854758704819,-0.050430591574339+I*0.09163920284755143,0.01704892005457949+I*0.08326920467824044,0.05821728389747625+I*0.04708779600394031,0.0717494970081054,0.05821728389747625+I*(-0.04708779600394031),0.01704892005457949+I*(-0.08326920467824044),-0.050430591574339+I*(-0.09163920284755143),-0.13091794569465862+I*(-0.04635854758704819)},{-0.06395922827425828+I*0.0021206787026224186,-0.03319654670091111+I*0.03642688062744131,0.0016977668572654568+I*0.04071801705322398,0.02628510531089685+I*0.02504369530874621,0.03492413042327437,0.02628510531089685+I*(-0.02504369530874621),0.0016977668572654568+I*(-0.04071801705322398),-0.03319654670091111+I*(-0.03642688062744131),-0.06395922827425828+I*(-0.0021206787026224186)}}");
  }

  @Test
  public void testAiryAiPrime() {
    checkNumeric("N(AiryAiPrime(5/2),50)", //
        "-0.02625088103590323036489549629723250944631783813577");
    checkNumeric("N(AiryAiPrime(7/3-2/5*I),50)", //
        "-0.028917778124487504513141104922968418472028212650386+I*(-0.018811415742061357600555631896195799635668608492363)");
    checkNumeric("AiryAiPrime(0.5)", //
        "-0.22491053266468389");
    checkNumeric("AiryAiPrime(2.5)", //
        "-0.02625088103590323");
    checkNumeric("AiryAiPrime(2.5+I)", //
        "-0.001879208609635154+I*0.03102762428412434");
    checkNumeric("AiryAiPrime({1.2, 1.5, 1.8})", //
        "{-0.13278537855722617,-0.097382012842301319,-0.068524780118610934}");
    checkNumeric("AiryAiPrime(-2.0-2.0*I)", //
        "1.6487871524446456+I*6.415538518806123");
    checkNumeric("Table(AiryAiPrime(x+I*y), {x,-2,2,0.5}, {y,-2 ,2,0.5})", //
        "{{1.6487871524446456+I*6.415538518806123,1.6878596822355927+I*2.4806208072054083,1.1349598127621308+I*0.8858793656453342,0.7458883289066517+I*0.27431948858168653,0.618259020741691,0.7458883289066517+I*(-0.27431948858168653),1.1349598127621308+I*(-0.8858793656453342),1.6878596822355927+I*(-2.4806208072054083),1.6487871524446456+I*(-6.415538518806123)},{-2.3030550440722424+I*3.8774173107220395,-0.3345378893766945+I*2.095682670415176,0.20512029484999575+I*0.9922668479364634,0.30343326708541907+I*0.3834721333013195,0.3091869672024104,0.30343326708541907+I*(-0.3834721333013195),0.20512029484999575+I*(-0.9922668479364634),-0.3345378893766945+I*(-2.095682670415176),-2.3030550440722424+I*(-3.8774173107220395)},{-2.8676537857073603+I*0.8724917728615671,-1.1461231789596997+I*0.9327396090334683,-0.3790604792268335+I*0.6045001308622461,-0.0840828742942518+I*0.2780574347535299,-0.0101605671166452,-0.0840828742942518+I*(-0.2780574347535299),-0.3790604792268335+I*(-0.6045001308622461),-1.1461231789596997+I*(-0.9327396090334683),-2.8676537857073603+I*(-0.8724917728615671)},{-1.8114574633153824+I*(-0.732706185063204),-1.0381897157458941+I*0.01498574222585462,-0.5329651964544925+I*0.1677731700936614,-0.2788911652372878+I*0.11225566397655384,-0.20408167033954736,-0.2788911652372878+I*(-0.11225566397655384),-0.5329651964544925+I*(-0.1677731700936614),-1.0381897157458941+I*(-0.01498574222585462),-1.8114574633153824+I*0.732706185063204},{-0.6778858159258347+I*(-1.0346546678889406),-0.6110271969857893+I*(-0.37863048108929087),-0.4324926598418071+I*(-0.09804785622924324),-0.30314078016520546+I*(-0.01115385005497297),-0.2588194037928068,-0.30314078016520546+I*0.01115385005497297,-0.4324926598418071+I*0.09804785622924324,-0.6110271969857893+I*0.37863048108929087,-0.6778858159258347+I*1.0346546678889406},{-0.03674926477766766+I*(-0.7457372872160632),-0.2451099200503726+I*(-0.40188530591715615),-0.26510577281460046+I*(-0.18295697728822785),-0.2387168090817686+I*(-0.06615704122109355),-0.2249105326646839,-0.2387168090817686+I*0.06615704122109355,-0.26510577281460046+I*0.18295697728822785,-0.2451099200503726+I*0.40188530591715615,-0.03674926477766766+I*0.7457372872160632},{0.17044497817891482+I*(-0.3876224394132951),-0.04512302735081416+I*(-0.2812572342962744),-0.1306279534996475+I*(-0.16306759644932392),-0.1551593916744975+I*(-0.07138312043218832),-0.1591474412967932,-0.1551593916744975+I*0.07138312043218832,-0.1306279534996475+I*0.16306759644932392,-0.04512302735081416+I*0.2812572342962744,0.17044497817891482+I*0.3876224394132951},{0.1641490955452542+I*(-0.15233207018896208),0.02699428387462872+I*(-0.15595954460697653),-0.05167696117033663+I*(-0.11014338866453188),-0.0875445637805217+I*(-0.05441486420112602),-0.09738201284230132,-0.0875445637805217+I*0.05441486420112602,-0.05167696117033663+I*0.11014338866453188,0.02699428387462872+I*0.15595954460697653,0.1641490955452542+I*0.15233207018896208},{0.10223125956387928+I*(-0.04122584003432774),0.03589425195019048+I*(-0.07249651606383496),-0.01511027928322695+I*(-0.06245895471360013),-0.04401537826205691+I*(-0.03416918110308045),-0.05309038443365363,-0.04401537826205691+I*0.03416918110308045,-0.01511027928322695+I*0.06245895471360013,0.03589425195019048+I*0.07249651606383496,0.10223125956387928+I*0.04122584003432774}}");
  }

  @Test
  public void testAiryBi() {
    checkNumeric("N(AiryBi(2),50)", //
        "3.2980949999782147102806044252234524220039759634036");
    checkNumeric("N(AiryBi(7/3-2/5*I),50)", //
        "4.2040796385460579391040264449272350088535559144026+I*(-2.6143893634206276469827729962237112678064082878901)");
    checkNumeric("AiryBi(1.8)", //
        "2.5958693567439062");
    checkNumeric("AiryBi(2.0)", //
        "3.2980949999782147");
    checkNumeric("AiryBi(2.5+I)", //
        "0.5125437840170126+I*5.334995579271627");

    checkNumeric("AiryBi(-2.0-2.0*I)", //
        "-2.3957473642273075+I*(-3.398597652739943)");
    checkNumeric("AiryBi({1.2, 1.5, 1.8})", //
        "{1.421133675610348,1.878941503747895,2.5958693567439062}");

    checkNumeric("Table(AiryBi(x+I*y), {x,-2,2,0.5}, {y,-2 ,2,0.5})", //
        "{{-2.3957473642273075+I*(-3.398597652739943),-1.5215235174057462+I*(-1.2926640316339846),-0.8669433867252541+I*(-0.48009810364065153),-0.5181812413053978+I*(-0.16077529192850537),-0.41230258795639846,-0.5181812413053978+I*0.16077529192850537,-0.8669433867252541+I*0.48009810364065153,-1.5215235174057462+I*1.2926640316339846,-2.3957473642273075+I*3.398597652739943},{0.29314672377266715+I*(-3.069446130475142),-0.2752096028849744+I*(-1.5640132276147374),-0.29941247892310363+I*(-0.749331643625712),-0.22584876813039773+I*(-0.30101085615453954),-0.1917848611570412,-0.22584876813039773+I*0.30101085615453954,-0.29941247892310363+I*0.749331643625712,-0.2752096028849744+I*1.5640132276147374,0.29314672377266715+I*3.069446130475142},{1.470664049922231+I*(-1.680152836300583),0.5460441211746294+I*(-1.149991696532466),0.21429040153487355+I*(-0.6739169237227052),0.12042394515743984+I*(-0.30639842195334394),0.1039973894969446,0.12042394515743984+I*0.30639842195334394,0.21429040153487355+I*0.6739169237227052,0.5460441211746294+I*1.149991696532466,1.470664049922231+I*1.680152836300583},{1.4644238527609936+I*(-0.5221254139942108),0.8253017961184056+I*(-0.6270187094804667),0.5215176250725336+I*(-0.4782484662833215),0.40700797160845714+I*(-0.2501387359622305),0.38035265975105387,0.40700797160845714+I*0.2501387359622305,0.5215176250725336+I*0.4782484662833215,0.8253017961184056+I*0.6270187094804667,1.4644238527609936+I*0.5221254139942108},{0.9853719221586965+I*0.01242055530982516,0.7646118577873012+I*(-0.3131746730618384),0.648858208330395+I*(-0.34495863476804833),0.6172080740295223+I*(-0.21132635103715733),0.6149266274460007,0.6172080740295223+I*0.21132635103715733,0.648858208330395+I*0.34495863476804833,0.7646118577873012+I*0.3131746730618384,0.9853719221586965+I*(-0.01242055530982516)},{0.48131792917659666+I*0.06009303522558786,0.5746740551712626+I*(-0.27862590346396093),0.6881452731134824+I*(-0.3708153907370108),0.8041665904962326+I*(-0.2492852888831791),0.8542770431031556,0.8041665904962326+I*0.2492852888831791,0.6881452731134824+I*0.3708153907370108,0.5746740551712626+I*0.27862590346396093,0.48131792917659666+I*(-0.06009303522558786)},{0.04882203245306119+I*(-0.13327405799174843),0.33937890746257143+I*(-0.4978317817248623),0.7166580733827684+I*(-0.6198892904008448),1.0642484093060358+I*(-0.42310591658329705),1.2074235949528713,1.0642484093060358+I*0.42310591658329705,0.7166580733827684+I*0.6198892904008448,0.33937890746257143+I*0.4978317817248623,0.04882203245306119+I*0.13327405799174843},{-0.45105814237785186+I*(-0.38809414209691345),-0.013791230339465+I*(-0.9778818927217168),0.7635143010350922+I*(-1.2190757998193475),1.5468176062000738+I*(-0.8489619949876455),1.8789415037478951,1.5468176062000738+I*0.8489619949876455,0.7635143010350922+I*1.2190757998193475,-0.013791230339465+I*0.9778818927217168,-0.45105814237785186+I*0.38809414209691345},{-1.3357392070661755+I*(-0.5495070069716564),-0.7729973894532738+I*(-1.8324051934417909),0.7782303837570418+I*(-2.5050963000641024),2.5273987946989434+I*(-1.8216184196428054),3.2980949999782148,2.5273987946989434+I*1.8216184196428054,0.7782303837570418+I*2.5050963000641024,-0.7729973894532738+I*1.8324051934417909,-1.3357392070661755+I*0.5495070069716564}}");
  }

  @Test
  public void testAiryBiPrime() {
    checkNumeric("N(AiryBiPrime(5/2),50)", //
        "9.4214233173343017555823088857282415621646345227564");
    checkNumeric("N(AiryBiPrime(7/3-2/5*I),50)", //
        "5.4518661084743299510432832669786565021597943899934+I*(-4.3411154905787576770350457655260005851939094028033)");
    checkNumeric("AiryBiPrime(1.8)", //
        "2.985540050846599");
    checkNumeric("AiryBiPrime(2.5)", //
        "9.4214233173343017");
    checkNumeric("AiryBiPrime(2.5+I)", //
        "-1.2050484049806622+I*8.290971678096389");
    checkNumeric("AiryBiPrime({1.2, 1.5, 1.8})", //
        "{1.221231398704895,1.8862122548481654,2.985540050846599}");

    checkNumeric("AiryBiPrime(-2.0-2.0*I)", //
        "6.447836111463259+I*(-1.6250516910582886)");

    checkNumeric("Table(AiryBiPrime(x+I*y), {x,-2,2,0.5}, {y,-2 ,2,0.5})", //
        "{{6.447836111463259+I*(-1.6250516910582886),2.5331033365702726+I*(-1.6228386817559723),0.9678264759011976+I*(-0.9859861458879565),0.4118370995916757+I*(-0.4345556675967243),0.2787951669211695,0.4118370995916757+I*0.4345556675967243,0.9678264759011976+I*0.9859861458879565,2.5331033365702726+I*1.6228386817559723,6.447836111463259+I*1.6250516910582886},{3.932016958918724+I*2.2988299083936297,2.1987088808869877+I*0.35671916706756285,1.1717853216838945+I*(-0.12630343066849617),0.6927551526059693+I*(-0.12820906415996783),0.5579081030218973,0.6927551526059693+I*0.12820906415996783,1.1717853216838945+I*0.12630343066849617,2.1987088808869877+I*(-0.35671916706756285),3.932016958918724+I*(-2.2988299083936297)},{0.9313363238436503+I*2.8169106658260783,1.0605056145042242+I*1.0950538084370467,0.8344734885227826+I*0.3465260632668285,0.6537434104306257+I*0.0796983792346929,0.5923756264227923,0.6537434104306257+I*(-0.0796983792346929),0.8344734885227826+I*(-0.3465260632668285),1.0605056145042242+I*(-1.0950538084370467),0.9313363238436503+I*(-2.8169106658260783)},{-0.6983087889843018+I*1.7009731791023295,0.1348775904970124+I*0.8926125557190643,0.4076171824999172+I*0.3741488036665492,0.4882315703778216+I*0.11815505364313456,0.5059337136238472,0.4882315703778216+I*(-0.11815505364313456),0.4076171824999172+I*(-0.3741488036665492),0.1348775904970124+I*(-0.8926125557190643),-0.6983087889843018+I*(-1.7009731791023295)},{-1.0677739995872133+I*0.4978725217882102,-0.303381005003919+I*0.34524663424099644,0.13502664671081896+I*0.1288373867812549,0.3713269124180393+I*0.01803794206706577,0.44828835735382633,0.3713269124180393+I*(-0.01803794206706577),0.13502664671081896+I*(-0.1288373867812549),-0.303381005003919+I*(-0.34524663424099644),-1.0677739995872133+I*(-0.4978725217882102)},{-0.921360768864399+I*(-0.2197924607761051),-0.4280924981222304+I*(-0.19419343508974987),0.04877551921017306+I*(-0.25046403727982797),0.4083984976406324+I*(-0.18775170288237833),0.5445725641405923,0.4083984976406324+I*0.18775170288237833,0.04877551921017306+I*0.25046403727982797,-0.4280924981222304+I*0.19419343508974987,-0.921360768864399+I*0.2197924607761051},{-0.8572392586053618+I*(-0.49550633630956736),-0.5359726424087651+I*(-0.6827306062773317),0.07566284417496599+I*(-0.7837009987854552),0.6795104251233364+I*(-0.5426642609278547),0.9324359333927756,0.6795104251233364+I*0.5426642609278547,0.07566284417496599+I*0.7837009987854552,-0.5359726424087651+I*0.6827306062773317,-0.8572392586053618+I*0.49550633630956736},{-1.2446407821497947+I*(-0.47896456660499337),-0.9655916784584485+I*(-1.2738241269843178),0.09801981538105+I*(-1.7162349060639506),1.3367467115667853+I*(-1.2503558060049476),1.8862122548481657,1.3367467115667853+I*1.2503558060049476,0.09801981538105+I*1.7162349060639506,-0.9655916784584485+I*1.2738241269843178,-1.2446407821497947+I*0.47896456660499337},{-2.485391698246339+I*(-0.06505542312836698),-2.3015638068118744+I*(-2.2323284011558417),-0.11024725075605855+I*(-3.6905551002552524),2.7705928921631884+I*(-2.8748527604587153),4.10068204993289,2.7705928921631884+I*2.8748527604587153,"
            + "-0.11024725075605855+I*3.6905551002552524,-2.3015638068118744+I*2.2323284011558417,-2.485391698246339+I*0.06505542312836698}}");
  }

  @Test
  public void testBesselI() {
    check("N(BesselI(0, 1), 50)", //
        "1.2660658777520083355982446252147175376076703113549");

    check("BesselI(3/2, z)", //
        "Sqrt(2/Pi)*Sqrt(z)*(Cosh(z)/z-Sinh(z)/z^2)");

    check("BesselI(-1/2, z)", //
        "(Sqrt(2/Pi)*Cosh(z))/Sqrt(z)");
    check("BesselI(1/2, z)", //
        "(Sqrt(2/Pi)*Sinh(z))/Sqrt(z)");

    checkNumeric("BesselI(I+1, -I*Infinity)", //
        "0");
    checkNumeric("BesselI(42, I*Infinity)", //
        "0");

    checkNumeric("BesselI(0, 0)", //
        "1");
    checkNumeric("BesselI(4, 0)", //
        "0");
    checkNumeric("BesselI(-42, 0)", //
        "0");
    checkNumeric("BesselI(-42.5, 0)", //
        "ComplexInfinity");
    checkNumeric("BesselI(I, 0)", //
        "Indeterminate");

    checkNumeric("BesselI(0,1.0 )", //
        "1.2660658777520082");
    checkNumeric("BesselI(0,2.0 )", //
        "2.2795853023360673");
    checkNumeric("BesselI(3 + I, 1.5 - I)", //
        "-0.2566499289084423+I*0.04927707435297576");
    checkNumeric("BesselI({0, 1, 2}, 1.)", //
        "{1.2660658777520082,0.565159103992485,0.13574766976703828}");
  }

  @Test
  public void testBesselJ() {
    checkNumeric("BesselJ(2.5,-5)", //
        "I*0.24037720111131736");

    check("BesselJ(3/2, x)", //
        "Sqrt(2/Pi)*Sqrt(x)*(-Cos(x)/x+Sin(x)/x^2)");
    check("BesselJ(-3/2, x)", //
        "-Sqrt(2/Pi)*Sqrt(x)*(Cos(x)/x^2+Sin(x)/x)");

    check("BesselJ(1/2,-1)", //
        "I*Sqrt(2/Pi)*Sin(1)");
    check("BesselJ(-1/2,-Infinity)", //
        "0");
    // https://github.com/mtommila/apfloat/issues/37
    checkNumeric("BesselJ(-1.9999999999998,3.0)", //
        "0.48609126058580704");
    checkNumeric("BesselJ(-1.999888,3.0)", //
        "0.48604418359704343");

    checkNumeric("BesselJ(0,0.001)", //
        "0.9999997500000157");
    checkNumeric("BesselJ(0,5.2)", //
        "-0.11029043979098652");
    checkNumeric("BesselJ(0,4.0)", //
        "-0.39714980986384735");
    checkNumeric("BesselJ(1,3.6 )", //
        "0.0954655471778764");
    checkNumeric("BesselJ(7/3 + I, 4.5 - I)", //
        "1.189083603364091+I*0.7156530815957028");
    //
    check("BesselJ(-42, z)", //
        "BesselJ(42,z)");
    check("BesselJ(-43, z)", //
        "-BesselJ(43,z)");
    // check("BesselJ(0.5, z)", //
    // "(Sqrt(2)*Sin(z))/(Sqrt(Pi)*Sqrt(z))");
    check("BesselJ(-0.5, 1.2)", //
        "0.263929");
    check("BesselJ(-0.5, 17)", //
        "-0.0532484");
    // check("BesselJ(-0.5, z)", //
    // "(Sqrt(2)*Sin(1.5708+z))/(Sqrt(Pi)*Sqrt(z))");
    check("BesselJ(1/2, z)", //
        "(Sqrt(2/Pi)*Sin(z))/Sqrt(z)");
    check("BesselJ(-1/2, z)", //
        "(Sqrt(2/Pi)*Cos(z))/Sqrt(z)");
    check("BesselJ(-2.5, 1.333)", //
        "1.6236");
    check("BesselJ(-2.5, z)", //
        "(Sqrt(2/Pi)*(-z)^2.0*(((2*Cos(z))/z^3-Cos(z)/z+(2*Sin(z))/z^2)/z+(Cos(z)/z^2+Sin(z)/z)/z^\n"
            + "2))/Sqrt(z)");
    check("BesselJ(-5/2, z)", //
        "Sqrt(2/Pi)*z^(3/2)*(((2*Cos(z))/z^3-Cos(z)/z+(2*Sin(z))/z^2)/z+(Cos(z)/z^2+Sin(z)/z)/z^\n"
            + "2)");
    check("BesselJ(0, 5.2)", "-0.11029");
    checkNumeric("BesselJ(3.5, 1.2)", //
        "0.013270419445925403");
    check("BesselJ(4.0, 0.0)", //
        "0.0");
    check("BesselJ(1.0, -3.0)", //
        "-0.339059");
    check("BesselJ(0.0, 0.0)", //
        "1.0");
    check("BesselJ(-3.0, 0.0)", //
        "0.0");
    check("BesselJ(-3, 0)", //
        "0");
    check("BesselJ(0, 0)", //
        "1");
    check("BesselJ(4, 0)", //
        "0");
    check("BesselJ(0.0, 4)", //
        "-0.39715");
    check("BesselJ(1, {0.5, 1.0, 1.5})", //
        "{0.242268,0.440051,0.557937}");
  }

  @Test
  public void testBesselJZero() {
    checkNumeric("BesselJZero(1.5, 1.0)", //
        "4.493409457909063");

    checkNumeric("BesselJZero(1.3, 3)", //
        "10.613804870197102");
    checkNumeric("BesselJZero(0.0,1)", //
        "2.4048255576957724");
    checkNumeric("BesselJZero(0.0,2)", //
        "5.520078110286311");
    checkNumeric("BesselJZero(1.0,5)", //
        "16.470630050877634");
    checkNumeric("BesselJZero(0, {1, 2, 3}) // N", //
        "{2.4048255576957724,5.520078110286311,8.653727912911013}");
    checkNumeric("BesselJZero(1, 1)/Pi // N", //
        "1.2196698912665045");

    checkNumeric("Table(BesselJZero(x,1), {x,-2,2,0.25})", //
        "{5.135622301840371,2.128942008713171,2.7983860457838383,3.3441825752889147,3.8317059702075125,1.0585082594041189,"//
            + "1.5707963267948966,2.006299671789453,2.4048255576957724,2.7808877239949776,3.141592653589793,3.491008374108422,"//
            + "3.8317059702075125,4.165426284471913,4.493409457909063,4.8165741496143175,5.135622301840371}");
  }

  @Test
  public void testBesselK() {
    check("BesselK(3/2, x)", //
        "Sqrt(Pi/2)*(1/(E^x*x^2)+1/(E^x*x))*Sqrt(x)");
    check("BesselK(-3/2, x)", //
        "Sqrt(Pi/2)*(1/(E^x*x^2)+1/(E^x*x))*Sqrt(x)");
    check("BesselK(1317624576693539401,3.0-2*I)", //
        "BesselK(1.31762*10^18,3.0+I*(-2.0))");
    check("BesselK(1/2, z)", //
        "Sqrt(Pi/2)/(E^z*Sqrt(z))");
    check("BesselK(-1/2, z)", //
        "Sqrt(Pi/2)/(E^z*Sqrt(z))");

    checkNumeric("BesselK(I+1, -I*Infinity)", //
        "0");
    checkNumeric("BesselK(42, I*Infinity)", //
        "0");

    checkNumeric("BesselK(0, 0)", //
        "Infinity");
    checkNumeric("BesselK(4, 0)", //
        "ComplexInfinity");
    checkNumeric("BesselK(I, 0)", //
        "Indeterminate");

    checkNumeric("BesselK(0,0.53)", //
        "0.8765603804164858");
    checkNumeric("BesselK(0,4.0)", //
        "0.01115967608585302");
    checkNumeric("BesselK(1 + I, 3.0 - 2* I)", //
        "-0.0225107551369776+I*0.01696073734722752");
    checkNumeric("BesselK(23, 1.0)", //
        "4.661145573743597E27");
    checkNumeric("BesselK({1, 2, 3}, 1.0)", //
        "{0.6019072301972346,1.6248388986351774,7.101262824737945}");
  }

  @Test
  public void testBesselY() {
    check("BesselY(-5/2, z)", //
        "(Sqrt(2/Pi)*((-3*Cos(z))/z-Sin(z)+(3*Sin(z))/z^2))/Sqrt(z)");

    checkNumeric("BesselY(2.5,-5)", //
        "I*(-0.2943723749617925)");
    check("BesselY(3.5,-5)", //
        "I*(-0.0275521)");
    checkNumeric("BesselY(I+1, -Infinity)", //
        "0");
    checkNumeric("BesselY(42, Infinity)", //
        "0");

    check("BesselY(-5/2, z)", //
        "(Sqrt(2/Pi)*((-3*Cos(z))/z-Sin(z)+(3*Sin(z))/z^2))/Sqrt(z)");
    check("BesselY(5/2, z)", //
        "(Sqrt(2/Pi)*(Cos(z)+(-3*Cos(z))/z^2+(-3*Sin(z))/z))/Sqrt(z)");
    check("BesselY(-3/2, z)", //
        "(Sqrt(2/Pi)*(Cos(z)-Sin(z)/z))/Sqrt(z)");
    check("BesselY(3/2, z)", //
        "(Sqrt(2/Pi)*(-Cos(z)/z-Sin(z)))/Sqrt(z)");
    check("BesselY(-1/2, z)", //
        "(Sqrt(2/Pi)*Sin(z))/Sqrt(z)");
    check("BesselY(1/2, z)", //
        "(-Sqrt(2/Pi)*Cos(z))/Sqrt(z)");
    checkNumeric("BesselY(0, 0)", //
        "-Infinity");
    checkNumeric("BesselY(4, 0)", //
        "ComplexInfinity");
    checkNumeric("BesselY(I, 0)", //
        "Indeterminate");

    checkNumeric("BesselY(10.0,1.0)", //
        "-1.2161801427868919E8");
    checkNumeric("BesselY(0,2.5)", //
        "0.49807035961523183");
    checkNumeric("BesselY(0,1.0)", //
        "0.08825696421567696");
    checkNumeric("BesselY(0.5*I, 3.0 - I)", //
        "1.0468646059974471+I*0.8847844476974699");
    checkNumeric("BesselY(0, {1.0, 2.0, 3.0})", //
        "{0.08825696421567696,0.5103756726497451,0.3768500100127904}");
  }

  @Test
  public void testBesselYZero() {
    // https://github.com/paulmasson/math/issues/11
    checkNumeric("BesselYZero(0.0,1)", //
        "0.8935769662791667");

    checkNumeric("BesselYZero(1.3, 3)", //
        "9.031260853138749");
    checkNumeric("BesselYZero(0.0,2)", //
        "3.957678419314858");

    checkNumeric("Table(BesselYZero(x,1), {x,-2,2,0.25})", //
        "{3.3842417671507086,3.971831829695435,4.49340945790909,1.59715544169372,2.1971413260288566,2.6938504353135104,"//
            + "3.141592653589793,0.508948483219022,0.8935769662791667,1.2416619546129948,1.5707963267946998,1.8880773496220198,"//
            + "2.1971413260288566,2.5001215460071022,2.7983860457838907,3.0928695359936826,3.3842417671507086}");
  }

  @Test
  public void testHankelH1() {
    // https://github.com/mtommila/apfloat/issues/64
    check("BesselJ(-1.0,-1009.0)", // HankelH1 calls BesselJ
        "0.00587966");
    check("HankelH1(-1.0 ,-1009)", //
        "-0.00587966+I*0.0244207");

    check("HankelH1(1317624576693539401,I*1/2)", //
        "HankelH1(1317624576693539401,I*1/2)");
    check("HankelH1(#2,#2)", //
        "HankelH1(#2,#2)");
    checkNumeric("HankelH1(2.0,3)", //
        "0.486091260585891+I*(-0.16040039348492371)");
    checkNumeric("HankelH1(3,1.2)", //
        "0.03287433692499494+I*(-3.5898996296131855)");
    checkNumeric("HankelH1(4.0,Pi)", //
        "0.15142457763134967+I*(-0.8284254758009151)");
    checkNumeric("HankelH1(23/47,5.0-I)", //
        "-0.8840126453742145+I*(-0.3758270384252589)");
  }

  @Test
  public void testHankelH2() {
    checkNumeric("HankelH2(3,1.2)", //
        "0.03287433692499494+I*3.5898996296131855");
    checkNumeric("HankelH2(0.2,3)", //
        "-0.13378696772476817+I*(-0.4383481561882015)");
    checkNumeric("HankelH2(4.0,3*Pi)", //
        "-0.2721262441569792+I*0.0156318265140554");
    checkNumeric("HankelH2(23/47,5.0-I)", //
        "-0.12723885289071823+I*0.02641083531089472");
  }


  @Test
  public void testSphericalHankelH1() {
    check("SphericalHankelH1(a,b)", //
        "SphericalHankelH1(a,b)");

    check("SphericalHankelH1(3, 1.5)", //
        "0.0283246+I*(-3.78927)");
    check("SphericalHankelH1(2, -5.0)", //
        "0.134731+I*(-0.164995)");
    check("SphericalHankelH1(-0.5, 1.0)", //
        "0.959033+I*0.110614");

    check("SphericalHankelH1(2 + I, 5.0 + I)", //
        "0.192197+I*0.15964");
  }

  @Test
  public void testSphericalHankelH2() {
    check("SphericalHankelH2(3, 1.5)", //
        "0.0283246+I*3.78927");
    check("SphericalHankelH2(2, -5.0)", //
        "0.134731+I*0.164995");
    check("SphericalHankelH2(-0.5, 1.0)", //
        "0.959033+I*(-0.110614)");

    check("SphericalHankelH2(1 + I, 5.0 + I)", //
        "-0.084523+I*(-0.120937)");
  }


  @Test
  public void testSphericalBesselJ() {
    check("SphericalBesselJ(2.5,-5)", //
        "I*0.204488");
    checkNumeric("SphericalBesselJ(1,5.2)", //
        "-0.12277149950214108");
    checkNumeric("SphericalBesselJ(2.5,-5)", // I*0.20448758430717914
        "I*0.20448758430717917");
    checkNumeric("SphericalBesselJ(2.0,-5)", //
        "0.13473121008883018");
    checkNumeric("SphericalBesselJ(-0.5,1)", //
        "0.9590330784042026");
    checkNumeric("SphericalBesselJ(2.0+I,5.0+I)", //
        "0.14163924534491812+I*0.005070099110737425");
  }

  @Test
  public void testSphericalBesselY() {
    // TODO improve this value
    check("SphericalBesselY(2.5,-5)", //
        "-0.613462+I*0.122973");

    checkNumeric("SphericalBesselY(1,5.5)", //
        "0.10485295921809935");

    checkNumeric("SphericalBesselY(-0.5,1)", //
        "0.11061370096805949");
    checkNumeric("SphericalBesselY(2.0+I,5.0+I)", //
        "0.15456969798535916+I*(-0.05055787979478312)");
    checkNumeric("SphericalBesselY(2.0,-5)", //
        "-0.16499545760108916");
  }

  @Test
  public void testSphericalHarmonicY() {
    check("SphericalHarmonicY(0,0,t,p)", //
        "1/(2*Sqrt(Pi))");
    check("SphericalHarmonicY(a,0,0,p)", //
        "Sqrt(1+2*a)/(2*Sqrt(Pi))");
    check("SphericalHarmonicY(1,2,t,p)", //
        "0");
    check("SphericalHarmonicY(1,1,t,p)", //
        "-1/2*E^(I*p)*Sqrt(3/2*1/Pi)*Sin(t)");
    check("SphericalHarmonicY(n,-n-1,t,p)", //
        "0");
  }

  @Test
  public void testWeberE() {
    // IntervalData: The expression {x,-1,1,1} is not a valid interval.
    check("WeberE(a,IntervalData({x,-1,1,1},{3,LessEqual,LessEqual,3}))", //
        "WeberE(a,IntervalData({x,-1,1,1},{3,LessEqual,LessEqual,3}))");
    if (Config.EXPENSIVE_JUNIT_TESTS) {
      check("WeberE(1009,-0.8+I*1.2)", //
          "Indeterminate");
    }
    check("WeberE(a, 0)", //
        "1/2*a*Pi*Sinc(1/2*a*Pi)^2");
    check("WeberE(1, 0)", //
        "2/Pi");
    check("WeberE(1, z)", //
        "2/Pi-StruveH(1,z)");

    checkNumeric("Table(WeberE(n,Sqrt(3)),{n,-1.0,-10.0,-1})", //
        "{-0.1169147394592414,0.1765050158610133,-0.29070613422346014,0.09542537933720352,-0.15004481335939523,0.0357535606026218,-0.09766312070144068,0.018542851878464717,-0.07362840767018497,0.011520811240188777}");
    checkNumeric("WeberE(1.0, 2.0)", //
        "-0.010143955915980829");

    checkNumeric("WeberE(0.5, -4.0)", //
        "0.6366197723675813*HypergeometricPFQ({1},{0.75,1.25},-4.0)+1.6976527263135508*HypergeometricPFQ({\n"
            + "1},{1.25,1.75},-4.0)");

    check("WeberE(1.5, 3.5)", //
        "0.212207*HypergeometricPFQ({1},{0.25,1.75},-3.0625)+0.891268*HypergeometricPFQ({\n"
            + "1},{0.75,2.25},-3.0625)");
    checkNumeric("Table(WeberE(n,b),{n,1,10})", //
        "{2/Pi-StruveH(1,b)," //
            + "2/3*b/Pi-StruveH(2,b)," //
            + "(2/3+2/15*b^2)/Pi-StruveH(3,b)," //
            + "(2/15*b+\n" //
            + "2/105*b^3)/Pi-StruveH(4,b)," //
            + "(2/5+2/105*b^2+2/945*b^4)/Pi-StruveH(5,b)," //
            + "(2/35*b+2/\n" //
            + "945*b^3+2/10395*b^5)/Pi-StruveH(6,b)," //
            + "(2/7+2/315*b^2+2/10395*b^4+2/135135*b^6)/Pi-StruveH(\n" //
            + "7,b)," //
            + "(2/63*b+2/3465*b^3+2/135135*b^5+2/2027025*b^7)/Pi-StruveH(8,b)," //
            + "(2/9+2/693*b^\n" //
            + "2+2/45045*b^4+2/2027025*b^6+2/34459425*b^8)/Pi-StruveH(9,b)," //
            + "(2/99*b+2/9009*b^3+2/\n" //
            + "675675*b^5+2/34459425*b^7+2/654729075*b^9)/Pi-StruveH(10,b)}"); //

  }
}
